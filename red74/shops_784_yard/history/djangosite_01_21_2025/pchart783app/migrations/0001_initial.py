# Generated by Django 5.1.1 on 2025-01-20 15:08

import django.core.serializers.json
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='choice_tbl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_tbl_grouping', models.CharField(max_length=100)),
                ('choice_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PartNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.IntegerField(default=1)),
                ('sort_order', models.IntegerField(default=500)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response_data', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Store the response data as JSON.')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.IntegerField(default=1)),
                ('sort_order', models.IntegerField(default=500)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('structure', models.JSONField(help_text='Define the structure of the survey as JSON.')),
                ('cell', models.CharField(help_text='Cell associated with this survey', max_length=100)),
                ('part_numbers', models.ManyToManyField(blank=True, related_name='surveys', to='pchart783app.partnumber')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_status', models.IntegerField(default=1)),
                ('sort_order', models.IntegerField(default=500)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question_id', models.IntegerField(help_text='ID of the question from the survey JSON')),
                ('question_text', models.TextField(help_text='Text of the question')),
                ('response', models.TextField(blank=True, help_text='The answer to the question', null=True)),
                ('issue', models.TextField(blank=True, help_text="Description of the issue if the answer is 'No'", null=True)),
                ('action_taken', models.TextField(blank=True, help_text="Action taken if the answer is 'No'", null=True)),
                ('status_by_admin', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', help_text='Status set by admin', max_length=20)),
                ('comment_by_admin', models.TextField(blank=True, help_text='Comment by admin', null=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_answers', to='pchart783app.answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pchart783app.survey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pchart783app.survey'),
        ),
    ]
